openapi: 3.0.0
info:
  title: サンプルAPI
  version: 1.0.0
servers:
  - url: http://localhost/atf
tags:
  - name: users
    description: ユーザ管理API
paths:
  /users/getProfile:
    get:
      summary: "BE-API001"
      description: "ユーザ情報を指定して取得"
      tags:
        - users
      parameters:
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
            example: "sample"
        - in: query
          name: userId
          required: true
          schema:
            type: string
            example: "53c714ae-a9ca-11ed-afa1-0242ac120002"
      responses:
        '200':
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/GetUserProfileResponse'
        '400':
          description: 禁止・無効なユーザーID
        '404':
          description: ユーザーが見つけられません。
        '500':
          description: 想定外エラー
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
  /users/storeProfile:
    post:
      summary: "BE-API002"
      description: "ユーザ情報を登録"
      tags:
        - users
      parameters:
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
            example: "sample"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/StoreUserRequest'
      responses:
        '201':
          description: 成功時のレスポンス
        '400':
          description: 禁止・無効なユーザーID
        '500':
          description: 想定外エラー
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
  /users/updateProfile:
    put:
      summary: "BE-API003"
      description: "ユーザ情報を更新"
      tags:
        - users
      parameters:
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
            example: "sample"
        - in: query
          name: userId
          required: true
          schema:
            type: string
            example: "afewfw"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '201':
          description: 成功時のレスポンス
        '400':
          description: 禁止・無効なユーザーID
        '404':
          description: ユーザーが見つけられません。
        '500':
          description: 想定外エラー
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
  /users/deleteProfile:
    delete:
      summary: "BE-API004"
      description: "ユーザ情報を指定して削除"
      tags:
        - users
      parameters:
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
            example: "sample"
        - in: query
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 成功時のレスポンス
        '400':
          description: 禁止・無効なユーザーID
        '404':
          description: ユーザーが見つけられません。
        '500':
          description: 想定外エラー
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    StoreUserRequest:
      type: object
      required:
        - "userId"
        - "name"
        - "birthday"
        - "emailAddress"
      properties:
        userId:
          type: string
          example: "sample_id"
          pattern: "^[a-z0-9]$"
          minLength: 4
          maxLength: 32
          description: "ユーザID"
        name:
          type: string
          example: "sample1"
          minLength: 4
          maxLength: 64
          description: "ユーザ名"
        birthday:
          type: string
          example: "2000/01/01"
          pattern: "^[0-9]{4}\/[0-9]{2}\/[0-9]{2}$"
          description: "誕生日"
        emailAddress:
          type: string
          format: string
          description: ユーザのメールアドレス
          example: "sample@dmm.co.jp"
    UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
          example: "sample1"
          description: "ユーザ名"
        emailAddress:
          type: string
          format: string
          description: ユーザのメールアドレス
          example: "sample@dmm.co.jp"
    GetUserProfileResponse:
      type: object
      properties:
        userId:
          type: string
          format: string
          description: ユーザーID
          example: "ser9j-i0j2fs"
        name:
          type: string
          format: string
          description: ユーザ名
          example: "yuu"
        age:
          type: integer
          format: int64
          description: ユーザの年齢
          example: 23
        birthday:
          type: string
          format: string
          description: 生年月日
          example: "2000/01/01"
        emailAddress:
          type: string
          format: string
          description: ユーザのメールアドレス
          example: "sample@dmm.co.jp"
    ErrorResponse:
      type: object
      properties:
        traceId:
          type: string
          format: string
          description: 追跡番号
          example: "53c714ae-a9ca-11ed-afa1-0242ac120002"
        errorMessage:
          type: string
          format: string
          description: エラーメッセージ
          example: "サンプルエラーメッセージ"
